{"ast":null,"code":"var _jsxFileName = \"/Users/mialiu/Desktop/react-spring-tutorial/src/Views/CardDeck/Deck.js\",\n    _s = $RefreshSig$();\n\nimport { render } from 'react-dom';\nimport React, { useState } from 'react';\nimport { useSprings, animated, interpolate } from 'react-spring';\nimport { useGesture } from 'react-with-gesture';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = ['https://imagizer.imageshack.com/v2/800x600q90/923/5IzJeV.jpg', 'https://imagizer.imageshack.com/v2/800x600q90/924/UnA6Kz.jpg', 'https://imagizer.imageshack.com/v2/800x600q90/923/6hXm68.jpg', 'https://imagizer.imageshack.com/v2/800x600q90/922/iFtbBm.jpg', 'https://imagizer.imageshack.com/v2/800x600q90/924/UnA6Kz.jpg', 'https://imagizer.imageshack.com/img921/75/10HQpA.jpg'];\n\nconst to = i => ({\n  x: 0,\n  y: i * -4,\n  scale: 0.8,\n  rot: -10 + Math.random() * 10,\n  delay: i * 200\n});\n\nconst from = i => ({\n  x: 0,\n  y: i * -4,\n  rot: 0,\n  scale: 0.1,\n  y: -1000\n});\n\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\n\nexport default function Deck() {\n  _s();\n\n  const [gone] = useState(() => new Set());\n  const [props, set] = useSprings(cards.length, i => ({ ...to(i),\n    from: from(i)\n  }));\n  const bind = useGesture(({\n    args: [index],\n    down,\n    delta: [xDelta],\n    distance,\n    direction: [xDir],\n    velocity\n  }) => {\n    const trigger = velocity > 0.9;\n    const dir = xDir < 0 ? -1 : 1;\n    if (!down && trigger) gone.add(index);\n    set(i => {\n      if (index !== i) return;\n      const isGone = gone.has(index);\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n      const scale = down ? 1.0 : 1;\n      return {\n        x,\n        rot,\n        scale,\n        delay: 0.2,\n        config: {\n          friction: 50,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n    if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600);\n  });\n  return props.map(({\n    x,\n    y,\n    rot,\n    scale\n  }, i) => /*#__PURE__*/_jsxDEV(animated.div, {\n    style: {\n      transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`)\n    },\n    children: /*#__PURE__*/_jsxDEV(animated.div, { ...bind(i),\n      style: {\n        transform: interpolate([rot, scale], trans),\n        backgroundImage: `url(${cards[i]})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Deck, \"GJ+tDNDoxUfn3sSn5jI87QbWEeI=\", false, function () {\n  return [useSprings, useGesture];\n});\n\n_c = Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/mialiu/Desktop/react-spring-tutorial/src/Views/CardDeck/Deck.js"],"names":["render","React","useState","useSprings","animated","interpolate","useGesture","cards","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","Deck","gone","Set","props","set","length","bind","args","index","down","delta","xDelta","distance","direction","xDir","velocity","trigger","dir","add","isGone","has","window","innerWidth","config","friction","tension","size","setTimeout","clear","map","transform","backgroundImage"],"mappings":"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","sourcesContent":["import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport { useSprings, animated, interpolate } from 'react-spring'\nimport { useGesture } from 'react-with-gesture'\nimport './styles.css'\n\nconst cards = [\n  'https://imagizer.imageshack.com/v2/800x600q90/923/5IzJeV.jpg',\n  'https://imagizer.imageshack.com/v2/800x600q90/924/UnA6Kz.jpg',\n  'https://imagizer.imageshack.com/v2/800x600q90/923/6hXm68.jpg',\n  'https://imagizer.imageshack.com/v2/800x600q90/922/iFtbBm.jpg',\n  'https://imagizer.imageshack.com/v2/800x600q90/924/UnA6Kz.jpg',\n  'https://imagizer.imageshack.com/img921/75/10HQpA.jpg'\n]\n\nconst to = i => ({ x: 0, y: i * -4, scale: 0.8, rot: -10 + Math.random() * 10, delay: i * 200 })\nconst from = i => ({ x: 0, y: i * -4, rot: 0, scale: 0.1, y: -1000 })\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\nexport default  function Deck() {\n  const [gone] = useState(() => new Set())\n  const [props, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) }))\n  const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.9\n    const dir = xDir < 0 ? -1 : 1\n    if (!down && trigger) gone.add(index)\n    set(i => {\n      if (index !== i) return\n      const isGone = gone.has(index)\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n      const scale = down ? 1.0 : 1\n      return { x, rot, scale, delay: 0.2, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === cards.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\n  })\n  return props.map(({ x, y, rot, scale }, i) => (\n    <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n      <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans), backgroundImage: `url(${cards[i]})` }} />\n    </animated.div>\n  ))\n}"]},"metadata":{},"sourceType":"module"}